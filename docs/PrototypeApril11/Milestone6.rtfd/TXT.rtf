{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 SFMono-Bold;\f1\fnil\fcharset0 SFMono-Regular;\f2\fswiss\fcharset0 Helvetica;
}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b\fs24 \cf0 What is your idea?\

\f1\b0 For content creators who want their videos to be accessible to a wider audience, they need to be able to quickly write captions. CaptchUp plays their video at a variable speed to accommodate the speed of their typing. In this case, Warner Herzog needs to write closed captions his film Grizzly Man.\
\

\f0\b What 3 technical aspects were you testing? And how did you address them?\
\
1. The ability to play a video at variable speeds\

\f1\b0 This was done by setting the playbackRate property of an HTML5 video element. Both of these two aspects are seen in the gif below
\f0\b \
\
2. The ability to measure the Words Per Minute (WPM) of the user\'92s typing\

\f1\b0 By hooking into the timeupdate event on the video element, I was able to get consistent updates of the elapsed time in the video. I measured the clock interval between each of these events and divided the number of words typed in the input element by this value to get the WPM that the user is typing. At this stage in the prototype, the assumed rate of speech in the video is 165, but eventually I hope to use the Google Speech API to calculate the actual WPM of the video.\

\f0\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f2\b0 \cf0 {{\NeXTGraphic ezgif-2-bc2d4aa7e9.gif \width12000 \height17520 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f0\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
3. The ability to export a valid caption file
\f1\b0 \
I included a library for parsing SubRip (.SRT) files. The output of this function can be seen below:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f2 \cf0 {{\NeXTGraphic Screen Shot 2018-04-09 at 10.48.38 AM.png \width33440 \height45560 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}}